name: CI

on:
  push:
    branches:
      - main
      - bsi/restore-2025-09-26
  pull_request:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality Gates
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: '20.17.0'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        id: install
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile
          else
            pnpm install
          fi

      - name: Lint
        id: lint
        run: pnpm lint --if-present

      - name: Type check
        id: typecheck
        run: pnpm type-check --if-present

      - name: Test
        id: test
        run: pnpm test --if-present -- --ci

      - name: Build
        id: build
        run: pnpm -r build --if-present

      - name: Socket.dev audit
        id: socket
        if: ${{ env.SOCKET_API_TOKEN != '' }}
        uses: socketsecurity/action@v0
        with:
          api-token: ${{ secrets.SOCKET_API_TOKEN }}
          path: '.'

      - name: Applitools smoke tests
        id: applitools
        if: ${{ env.APPLITOOLS_API_KEY != '' }}
        uses: applitools/eyes-universal@v1
        with:
          api-key: ${{ secrets.APPLITOOLS_API_KEY }}
          batch-name: 'CI smoke tests'

      - name: Report summary
        if: always()
        run: |
          cat <<'MARKDOWN' >> "$GITHUB_STEP_SUMMARY"
          ## CI Results

          | Check | Status |
          | ----- | ------ |
          | Install | ${{ steps.install.outcome }} |
          | Lint | ${{ steps.lint.outcome }} |
          | Type Check | ${{ steps.typecheck.outcome }} |
          | Test | ${{ steps.test.outcome }} |
          | Build | ${{ steps.build.outcome }} |
          | Socket.dev Audit | ${{ steps.socket.outcome || 'skipped' }} |
          | Applitools Smoke | ${{ steps.applitools.outcome || 'skipped' }} |
          MARKDOWN
    env:
      SOCKET_API_TOKEN: ${{ secrets.SOCKET_API_TOKEN }}
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
