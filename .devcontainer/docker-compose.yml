version: '3.9'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - ..:/workspace:cached
      - ~/.ssh:/home/vscode/.ssh:ro
      - ~/.gitconfig:/home/vscode/.gitconfig:ro
      - node_modules:/workspace/node_modules
      - python_cache:/home/vscode/.cache
      - vscode_extensions:/home/vscode/.vscode-server/extensions
    environment:
      - DISPLAY=:0
      - TZ=America/Chicago
      - PYTHONUNBUFFERED=1
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://bsi:bsi_dev@postgres:5432/blazesportsintel
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - SPORTSDATAIO_API_KEY=${SPORTSDATAIO_API_KEY}
    command: sleep infinity
    networks:
      - bsi-network
    ports:
      - "8000:8000"  # Python HTTP Server
      - "8080:8080"  # Live Server
      - "8787:8787"  # Wrangler Dev
      - "3000:3000"  # Frontend Dev
      - "5000:5000"  # Flask/FastAPI
      - "8888:8888"  # Jupyter
    depends_on:
      - redis
      - postgres
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    stdin_open: true
    tty: true

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - bsi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: bsi
      POSTGRES_PASSWORD: bsi_dev
      POSTGRES_DB: blazesportsintel
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - bsi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bsi"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DEFAULT_BUCKETS: media,data,analytics
    command: server /data --console-address ":9001"
    networks:
      - bsi-network
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - bsi-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=blazeintel
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SERVER_ROOT_URL=http://localhost:3001
    networks:
      - bsi-network
    depends_on:
      - prometheus

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - bsi-network
    environment:
      MH_STORAGE: memory
      MH_UI_WEB_PATH: /mail

  # Mock Sports Data API for local development
  sports-api-mock:
    image: mockserver/mockserver:latest
    ports:
      - "1080:1080"
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/expectations.json
    volumes:
      - ./test/mocks:/config:ro
    networks:
      - bsi-network

volumes:
  node_modules:
  python_cache:
  vscode_extensions:
  redis_data:
  postgres_data:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  bsi-network:
    external: true