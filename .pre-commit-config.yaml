# BSI Pre-commit Configuration
# Automated code quality checks before every commit

repos:
  # Python formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=100]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=100, --extend-ignore=E203,W503]
        additional_dependencies: [flake8-docstrings, flake8-bugbear]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --check-untyped-defs]
        additional_dependencies: [types-requests, types-PyYAML]

  # JavaScript/HTML/CSS formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|html|css|json|md|yaml|yml)$

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        args: [--fix]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: [-ll, -r, .]
        exclude: tests/

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-docstring-first
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        entry: hadolint/hadolint:v2.12.0 hadolint
        files: Dockerfile.*

  # Shell script checks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: [-x]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint]

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Python docstring coverage
  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
        args: [--verbose, --fail-under=80, --ignore-init-method, --ignore-init-module]

  # Python import sorting
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: [--py311-plus]

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]

# Custom local hooks
  - repo: local
    hooks:
      - id: check-env-file
        name: Check .env.example is updated
        entry: bash -c 'if [ -f .env ]; then python3 scripts/check_env_sync.py; fi'
        language: system
        pass_filenames: false

      - id: test-biomechanics
        name: Run biomechanics tests
        entry: python3 test_biomech.py
        language: system
        pass_filenames: false
        stages: [push]

      - id: check-cloudflare-config
        name: Validate wrangler.toml
        entry: wrangler pages validate
        language: system
        files: wrangler\.toml$
        pass_filenames: false

      - id: no-console-log
        name: No console.log in production
        entry: bash -c 'grep -r "console\.log" --include="*.js" --exclude-dir=node_modules . && echo "Remove console.log statements" && exit 1 || exit 0'
        language: system
        pass_filenames: false

      - id: no-print-statements
        name: No print statements in Python
        entry: bash -c 'grep -r "print(" --include="*.py" --exclude-dir=tests . && echo "Remove print statements" && exit 1 || exit 0'
        language: system
        pass_filenames: false

# Configuration settings
default_language_version:
  python: python3.11
  node: 20.11.0

fail_fast: false
exclude: |
  (?x)^(
    .*\.min\.(js|css)|
    node_modules/|
    venv/|
    \.venv/|
    __pycache__/|
    \.pytest_cache/|
    \.mypy_cache/|
    dist/|
    build/|
    .*\.egg-info/|
    htmlcov/|
    \.coverage|
    \.git/|
    \.env$|
    .*\.pyc$|
    .*\.pyo$|
    .*\.pyd$|
    .*\.db$|
    .*\.sqlite$
  )